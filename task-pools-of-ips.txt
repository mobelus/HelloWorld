/* 
  Имеем DHCP-сервер, который выдаёт конечным пользователям IP-адреса из пула.
  Пул представляет собой набор диапазонов адресов IPv4. При изменении настроек пула 
  необходимо получить диапазоны IP-адресов, которые входили в старый пул, но не входят в новый, 
  чтобы пометить их в системе как устаревшие. Реализуйте функцию, которая будет вычислять устаревшие
  диапазоны, сравнивая новый и старый пул. Предложите тест-кейсы, позволяющие убедиться в корректности 
  работы алгоритма.
*/

// Используйте следующие типы для IP-адресов, диапазонов и пулов:
using IPAddress = uint32_t; 					// Адрес IPv4 представлен целочисленным типом uint32_t
using Range = std::pair<IPAddress, IPAddress>;	// Диапазон IP-адресов, границы включены
// using Pool = ? // предложите оптимальный STL-котейнер для хранения диапазонов IP-адресов (Range)
// Диапазоны IP-адресов в пулах могут пересекаться. Порядок их расположения в пуле - произвольный.

// Функция, вычисляющая разницу между старым и новым пулами:
// `old_pool` - старый пул IP-адресов
// `new_pool` - новый  пул IP-адресов
// return value - пул диапазонов "устаревших" IP-адресов

Pool find_diff(const Pool& old_pool, const Pool& new_pool)
{
    Pool result;
    // TODO: реализуйте алгоритм, описанный в условии задачи
    // ...
    return result;
}